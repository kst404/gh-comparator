export default {
  "kind": "Listing",
  "data": {
    "modhash": "",
    "children": [{
      "kind": "t3",
      "data": {
        "domain": "github.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48rrgn",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "ayrtonbe",
        "media": null,
        "score": 1,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/mW-ckd04AfipWs5qFnvpxQb47Yuk9GSBiuaZNJUKG7o.jpg?s=6e45888ed828065789d7fd1d00adbbc0",
              "width": 400,
              "height": 400
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/mW-ckd04AfipWs5qFnvpxQb47Yuk9GSBiuaZNJUKG7o.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=3700911c6098cfcb7f8554ae74528fe7",
              "width": 108,
              "height": 108
            }, {
              "url": "https://i.redditmedia.com/mW-ckd04AfipWs5qFnvpxQb47Yuk9GSBiuaZNJUKG7o.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=759b19b1984a6f0a3e4413421d72fe7f",
              "width": 216,
              "height": 216
            }, {
              "url": "https://i.redditmedia.com/mW-ckd04AfipWs5qFnvpxQb47Yuk9GSBiuaZNJUKG7o.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=8433870392b549d8245f4f7dbd04ca61",
              "width": 320,
              "height": 320
            }],
            "variants": {},
            "id": "5e7eQ0J8GvRnGjYLuXBTzuz0DqqvWj-UVgzTGrij0d0"
          }]
        },
        "num_comments": 1,
        "thumbnail": "http://b.thumbs.redditmedia.com/ZNGyb1mzisrZj5FNNgog48rf5zIHlcSzsjz2vnwX2dE.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": true,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48rrgn/handling_key_events_with_reactkeyhandler/",
        "locked": false,
        "name": "t3_48rrgn",
        "created": 1457036807.0,
        "url": "https://github.com/ayrton/react-key-handler",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Handling key events with react-key-handler",
        "created_utc": 1457008007.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 1
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "richardbagshaw.co.uk",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48rqbp",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "bagwaa",
        "media": null,
        "score": 0,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/BvaA2Yx17EDMCS7lFCAxxGK60r9YhCJ7RskiEYHCCwU.jpg?s=4d64daea38e2af02ac88314631e88a09",
              "width": 500,
              "height": 500
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/BvaA2Yx17EDMCS7lFCAxxGK60r9YhCJ7RskiEYHCCwU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=b502aba0d4ee2664b53f2e0405d8d23f",
              "width": 108,
              "height": 108
            }, {
              "url": "https://i.redditmedia.com/BvaA2Yx17EDMCS7lFCAxxGK60r9YhCJ7RskiEYHCCwU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=aade094808435f3e3ad1f68fd5a5a3d0",
              "width": 216,
              "height": 216
            }, {
              "url": "https://i.redditmedia.com/BvaA2Yx17EDMCS7lFCAxxGK60r9YhCJ7RskiEYHCCwU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=db9f16a2b77f27a4043d012ddcb6e27b",
              "width": 320,
              "height": 320
            }],
            "variants": {},
            "id": "9jZ9Q0ly_eUyuTDt7nmsSQsrBBaQQzrN5KNLpGNDO8Q"
          }]
        },
        "num_comments": 1,
        "thumbnail": "http://b.thumbs.redditmedia.com/IUWEI_P-pNIp31Axjq94JQBwb0XzCRlDT6S1NApyL8c.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": true,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48rqbp/my_thoughts_on_learning_react/",
        "locked": false,
        "name": "t3_48rqbp",
        "created": 1457036149.0,
        "url": "http://www.richardbagshaw.co.uk/learning-react/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "My Thoughts on Learning React",
        "created_utc": 1457007349.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 0
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;What is it the equivalent of in other types of systems? Is it an event bus? Please answer as though you were explaining it to a dumb child :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "What is it the equivalent of in other types of systems? Is it an event bus? Please answer as though you were explaining it to a dumb child :)",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48o3vq",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "el_chief",
        "media": null,
        "score": 14,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 16,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48o3vq/dumb_question_but_what_is_the_flux_architecture/",
        "locked": false,
        "name": "t3_48o3vq",
        "created": 1456978716.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48o3vq/dumb_question_but_what_is_the_flux_architecture/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Dumb question, but what is the Flux Architecture for?",
        "created_utc": 1456949916.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 14
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey. I have a question about flux data management. I built reusable newsletter component that can be used multiple times in one view. When you fill it with email it gets response from external service with subscription status. Should i store it inside redux or just in state? I don&amp;#39;t know where to execute the request? Inside component or in actions? If i simply connect it to redux all instances will be in sync, but it can&amp;#39;t be like that.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "Hey. I have a question about flux data management. I built reusable newsletter component that can be used multiple times in one view. When you fill it with email it gets response from external service with subscription status. Should i store it inside redux or just in state? I don't know where to execute the request? Inside component or in actions? If i simply connect it to redux all instances will be in sync, but it can't be like that.",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48r8r4",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "Ghert",
        "media": null,
        "score": 1,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 1,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48r8r4/question_component_instances_and_flux/",
        "locked": false,
        "name": "t3_48r8r4",
        "created": 1457024682.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48r8r4/question_component_instances_and_flux/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Question. Component instances and flux.",
        "created_utc": 1456995882.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 1
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am new to all of this.  I have a field react component.  It has two props and events.  I have multiple places where this component could be used - mainly in table for viewing a report and also in a form for saving information.  The stores for the table and for the form have a different structure.  I&amp;#39;d like to use ReactRedux.connect() to connect this component to the stores, but depending on where it is used, the mapStateToProps and mapDispatchToProps methods would need to be different.  I found that these methods can return other methods, but I do not think that this will help in my case, at least not from how the tests show it being used.&lt;/p&gt;\n\n&lt;p&gt;I assume that my two options are to either:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt; Create two separate components by using connect() twice&lt;/li&gt;\n&lt;li&gt; Wrap my component in another component that can translate data from the store to props - but this seems like I&amp;#39;m missing the benefits that come with using a store and connect().&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;One assumption that I have made, is that connect() is meant to be called once on a component.  I guess another option would be that when I am using my field component, that I could wrap it and make a local version. For the reports, this would mean creating 1000s of local components which would be re-created with each render.  This seems really bad.  Any advice would be great.  Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "I am new to all of this.  I have a field react component.  It has two props and events.  I have multiple places where this component could be used - mainly in table for viewing a report and also in a form for saving information.  The stores for the table and for the form have a different structure.  I'd like to use ReactRedux.connect() to connect this component to the stores, but depending on where it is used, the mapStateToProps and mapDispatchToProps methods would need to be different.  I found that these methods can return other methods, but I do not think that this will help in my case, at least not from how the tests show it being used.\n\nI assume that my two options are to either:\n\n1.  Create two separate components by using connect() twice\n2.  Wrap my component in another component that can translate data from the store to props - but this seems like I'm missing the benefits that come with using a store and connect().\n\nOne assumption that I have made, is that connect() is meant to be called once on a component.  I guess another option would be that when I am using my field component, that I could wrap it and make a local version. For the reports, this would mean creating 1000s of local components which would be re-created with each render.  This seems really bad.  Any advice would be great.  Thanks.",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48qg03",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "coop_07",
        "media": null,
        "score": 2,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 5,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48qg03/react_redux_is_it_possible_to_have_dynamic/",
        "locked": false,
        "name": "t3_48qg03",
        "created": 1457009070.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48qg03/react_redux_is_it_possible_to_have_dynamic/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "React Redux - is it possible to have dynamic mapStateToProps",
        "created_utc": 1456980270.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 2
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "redux.servicestack.net",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48odd4",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "mythz",
        "media": null,
        "score": 6,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/5i5zxX5zjoX_WgIlojMIG4qEIBqNt4kZs_hd2orj2tU.jpg?s=9ae0a45305ea1741a849fe568348deb1",
              "width": 149,
              "height": 149
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/5i5zxX5zjoX_WgIlojMIG4qEIBqNt4kZs_hd2orj2tU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=de059ed6fbe1885afb45447e4e4aa76a",
              "width": 108,
              "height": 108
            }],
            "variants": {},
            "id": "7UI71greov1_uAKO8JzSCAOaRxjbl6ps0z0WSzqMINU"
          }]
        },
        "num_comments": 0,
        "thumbnail": "http://a.thumbs.redditmedia.com/X4QoxVCHPw9AZZjYbSLvNOmLTSzYaOkZ6RPI80nREM0.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48odd4/networked_time_traveller_demo_in_typescript_redux/",
        "locked": false,
        "name": "t3_48odd4",
        "created": 1456981885.0,
        "url": "http://redux.servicestack.net",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Networked Time Traveller Demo in TypeScript + Redux",
        "created_utc": 1456953085.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 6
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "theredge.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48pxsr",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "jineshshah36",
        "media": null,
        "score": 2,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 4,
        "thumbnail": "default",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48pxsr/check_out_this_site_that_i_built_using_universal/",
        "locked": false,
        "name": "t3_48pxsr",
        "created": 1457001466.0,
        "url": "https://www.theredge.com",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Check out this site that I built using universal javascript in React and Redux. No longer do I have to build the web app and web site differently!",
        "created_utc": 1456972666.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 2
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "medium.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48mgxa",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "lavrton",
        "media": null,
        "score": 17,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/tsJbWJTFS822mBv8MYVzFaA5LV9VjcofpaXHhmjQYWg.jpg?s=7f857663ce21d9dd70ba84f68c70cc5d",
              "width": 200,
              "height": 200
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/tsJbWJTFS822mBv8MYVzFaA5LV9VjcofpaXHhmjQYWg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=5fb074a3cb12deb454b38d62a58fde04",
              "width": 108,
              "height": 108
            }],
            "variants": {},
            "id": "hTJ0gLqiusq9U3wlryUMvG0n2MjyPYAajUsyYWL4ugo"
          }]
        },
        "num_comments": 0,
        "thumbnail": "http://b.thumbs.redditmedia.com/arOJJwMam4nyBTLa_zxDlucYVyw0wfl8gAbcX-WfITw.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48mgxa/using_react_with_canvas_element/",
        "locked": false,
        "name": "t3_48mgxa",
        "created": 1456959583.0,
        "url": "https://medium.com/@lavrton/using-react-with-html5-canvas-871d07d8d753",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Using React with canvas element",
        "created_utc": 1456930783.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 17
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;I am developing app using react, react-router, redux and express. There is lots of articles about using immutability in state, so I decided to try out Immutable.js library. And here starts couple of my questions.&lt;/p&gt;\n\n&lt;p&gt;First of, how do you handle initial state? My express backend injects those data and then they are retrieved by client. Client, however, thinks those are just javascript objects and not Immutable.js data. Right now I need to do:     &lt;code&gt;Immutable.fromJS(window.__INITIAL_STATE__)&lt;/code&gt; and dispatch them to the store. Not sure if there is better approach.&lt;/p&gt;\n\n&lt;p&gt;The second question is related to some data manipulation. Is there a nicer way to increase number in object that is in List? I am doing it right now this way: \n&lt;code&gt;\nreturn state.update(\n        state.findIndex((ticket) =&amp;gt; ticket.get(&amp;quot;id&amp;quot;) === action.id),\n        (ticket) =&amp;gt; (ticket.set(&amp;#39;quant&amp;#39;, ticket.get(&amp;quot;quant&amp;quot;) + 1))\n      );\n&lt;/code&gt;\nI Couldn&amp;#39;t really find any other way, since everybody in every tutorial is using easier structures.&lt;/p&gt;\n\n&lt;p&gt;I am really asking just to learn good practices from beginning.&lt;/p&gt;\n\n&lt;p&gt;Also is there some way to execute es6 written express app? I know babel-node can handle that, but according to their documentation it&amp;#39;s not really meant for production.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "Hi,\n\nI am developing app using react, react-router, redux and express. There is lots of articles about using immutability in state, so I decided to try out Immutable.js library. And here starts couple of my questions.\n\nFirst of, how do you handle initial state? My express backend injects those data and then they are retrieved by client. Client, however, thinks those are just javascript objects and not Immutable.js data. Right now I need to do:     `Immutable.fromJS(window.__INITIAL_STATE__)` and dispatch them to the store. Not sure if there is better approach.\n\nThe second question is related to some data manipulation. Is there a nicer way to increase number in object that is in List? I am doing it right now this way: \n```\nreturn state.update(\n        state.findIndex((ticket) =&gt; ticket.get(\"id\") === action.id),\n        (ticket) =&gt; (ticket.set('quant', ticket.get(\"quant\") + 1))\n      );\n```\nI Couldn't really find any other way, since everybody in every tutorial is using easier structures.\n\nI am really asking just to learn good practices from beginning.\n\nAlso is there some way to execute es6 written express app? I know babel-node can handle that, but according to their documentation it's not really meant for production.",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48qmhz",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "backma",
        "media": null,
        "score": 1,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 2,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48qmhz/good_way_to_pass_in_initial_state/",
        "locked": false,
        "name": "t3_48qmhz",
        "created": 1457011681.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48qmhz/good_way_to_pass_in_initial_state/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Good way to pass in initial state",
        "created_utc": 1456982881.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 1
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "tutorials.pluralsight.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48n7ac",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "prtkgpt",
        "media": null,
        "score": 4,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/vekkSX-eRrmnrfIVeGuFAonpril2WeByXLfcLVi3CFo.jpg?s=d0c77b4b0c903d052105a399d0f44bcd",
              "width": 678,
              "height": 414
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/vekkSX-eRrmnrfIVeGuFAonpril2WeByXLfcLVi3CFo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=e3e12ecb2a96133ca848f68def525af8",
              "width": 108,
              "height": 65
            }, {
              "url": "https://i.redditmedia.com/vekkSX-eRrmnrfIVeGuFAonpril2WeByXLfcLVi3CFo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=04affc039b4905b65ec9f13ef9ef8191",
              "width": 216,
              "height": 131
            }, {
              "url": "https://i.redditmedia.com/vekkSX-eRrmnrfIVeGuFAonpril2WeByXLfcLVi3CFo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=093a1fb1b522a437a8733d9201ecde74",
              "width": 320,
              "height": 195
            }, {
              "url": "https://i.redditmedia.com/vekkSX-eRrmnrfIVeGuFAonpril2WeByXLfcLVi3CFo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=93d722e801a0ac4c517afb15e5db6a9a",
              "width": 640,
              "height": 390
            }],
            "variants": {},
            "id": "bXywJlfrFebx5ttqNi0pFFLBsBEmnOpIKiyuL6vLVI0"
          }]
        },
        "num_comments": 1,
        "thumbnail": "http://a.thumbs.redditmedia.com/Xfgl6pbiFfeC56DTxJMLl1BlVHl8cvFBKkVT5Og_LL4.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48n7ac/how_to_build_a_crud_interface_with_react_and_ruby/",
        "locked": false,
        "name": "t3_48n7ac",
        "created": 1456969045.0,
        "url": "http://tutorials.pluralsight.com/review/building-a-crud-interface-with-react-and-ruby-on-rails",
        "author_flair_text": null,
        "quarantine": false,
        "title": "How to build a CRUD interface with React and Ruby on Rails (xpost from /r/javascript)",
        "created_utc": 1456940245.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 4
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Was wondering how and where people store selectors in big Redux apps?  We use the concept of a redux &amp;#39;ducks&amp;#39; where we keep all constants, action creators, and the reducer in one file for each duck.  Was thinking this might be a natural place to store selectors as well but I worry the file will start to get too big/many parts of the app will need to get access to the selectors.&lt;/p&gt;\n\n&lt;p&gt;Any conventions that have worked for your teams would be much appreciated!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "Was wondering how and where people store selectors in big Redux apps?  We use the concept of a redux 'ducks' where we keep all constants, action creators, and the reducer in one file for each duck.  Was thinking this might be a natural place to store selectors as well but I worry the file will start to get too big/many parts of the app will need to get access to the selectors.\n\nAny conventions that have worked for your teams would be much appreciated!",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48meu5",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "spencercdixon",
        "media": null,
        "score": 5,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 3,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48meu5/anyone_using_reselects_selectors_in_a_large_redux/",
        "locked": false,
        "name": "t3_48meu5",
        "created": 1456958744.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48meu5/anyone_using_reselects_selectors_in_a_large_redux/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Anyone using reselect's selectors in a large Redux application? Where do you store them?",
        "created_utc": 1456929944.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 5
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "stackoverflow.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48nerf",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "rokemaster",
        "media": null,
        "score": 2,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?s=5771b03e94f56162bcafaf1079f2a1e7",
              "width": 316,
              "height": 316
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=9189a7b196263db4825e3ab0c948e796",
              "width": 108,
              "height": 108
            }, {
              "url": "https://i.redditmedia.com/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=c442ba677155996a0a49f51a400124b1",
              "width": 216,
              "height": 216
            }],
            "variants": {},
            "id": "nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0"
          }]
        },
        "num_comments": 0,
        "thumbnail": "http://b.thumbs.redditmedia.com/FWPJhmNlvwYngarjpdVpgKW5TsK2-ck9fRmOhlYq3pM.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48nerf/reactjs_react_router_redux_go_action_is_shown_in/",
        "locked": false,
        "name": "t3_48nerf",
        "created": 1456971499.0,
        "url": "http://stackoverflow.com/q/35755072/816721",
        "author_flair_text": null,
        "quarantine": false,
        "title": "reactjs - React Router Redux go action is shown in the LogMonitor but doesn't change the path on browser",
        "created_utc": 1456942699.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 2
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve spent about 4 days researching how to write a Javascript single page application with redux and react, and I&amp;#39;m definitely hitting &amp;quot;JS Fatigue&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d really appreciate some tips that don&amp;#39;t replicate the blog posts all over the internet.&lt;/p&gt;\n\n&lt;p&gt;I have a rails backend with an API on a big production database. We have iOS and Android teams that are currently using the API. We want to rewrite our frontend using Javascript instead of the Rails view layer. We&amp;#39;re hoping in the end this makes us more productive.&lt;/p&gt;\n\n&lt;p&gt;React is beatiful. I love React. I&amp;#39;m on board. I believe in the need of a state tree, too (since we&amp;#39;re managing massive amounts of view state). Redux is wonderful. It&amp;#39;s a brilliant idea.&lt;/p&gt;\n\n&lt;p&gt;My problem is going from the idea of &amp;quot;react+redux SPA&amp;quot; and turning it into a real application. Every blogger on the internet wants to help me make a simple Todo List application where the entire state is one array or something. I don&amp;#39;t need that.&lt;/p&gt;\n\n&lt;p&gt;I need to know how to design my state for probably about 40-50 routes, all made up of react components. I need to fetch and page thousands of records with complex inter-relations.&lt;/p&gt;\n\n&lt;p&gt;We (team of 3) have already started building the app, but we&amp;#39;re all a little nervous that we&amp;#39;re going to pour hundreds of hours into this refactoring project and find out it would have been simpler and better to stick with rails views.&lt;/p&gt;\n\n&lt;p&gt;So here&amp;#39;s what I&amp;#39;m looking for:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Any boilerplate/examples/tutorials of app architectures that &lt;em&gt;already scaled&lt;/em&gt;. I&amp;#39;ve heard redux scales well, but I&amp;#39;m looking for someone that has already tried that and made the inevitable mistakes. And I need code, not assurances.&lt;/li&gt;\n&lt;li&gt;Better documentation search strategy recommendations. The pages I&amp;#39;m finding are simultaneously repetitive yet inconsistent (with syntax, etc). Are there any &amp;quot;single sources of truth&amp;quot; out there that will be useful? Google searching is not cutting it for the first time in my life, and I&amp;#39;m lost :|&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Thanks so much. I&amp;#39;m really blown away by the quality of posts in this subreddit so I&amp;#39;m hoping your guys&amp;#39; wisdom is what I&amp;#39;m missing :)&lt;/p&gt;\n\n&lt;p&gt;EDIT:&lt;/p&gt;\n\n&lt;p&gt;And the more I look at this, the more I realize that a lot of problems I&amp;#39;m anticipating boil down to one:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;What is a robust way to keep my client-side redux store in sync with my server side database? (given that I may be accessing that data from a lot of different routes/components)&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "I've spent about 4 days researching how to write a Javascript single page application with redux and react, and I'm definitely hitting \"JS Fatigue\".\n\nI'd really appreciate some tips that don't replicate the blog posts all over the internet.\n\nI have a rails backend with an API on a big production database. We have iOS and Android teams that are currently using the API. We want to rewrite our frontend using Javascript instead of the Rails view layer. We're hoping in the end this makes us more productive.\n\nReact is beatiful. I love React. I'm on board. I believe in the need of a state tree, too (since we're managing massive amounts of view state). Redux is wonderful. It's a brilliant idea.\n\nMy problem is going from the idea of \"react+redux SPA\" and turning it into a real application. Every blogger on the internet wants to help me make a simple Todo List application where the entire state is one array or something. I don't need that.\n\nI need to know how to design my state for probably about 40-50 routes, all made up of react components. I need to fetch and page thousands of records with complex inter-relations.\n\nWe (team of 3) have already started building the app, but we're all a little nervous that we're going to pour hundreds of hours into this refactoring project and find out it would have been simpler and better to stick with rails views.\n\nSo here's what I'm looking for:\n\n1. Any boilerplate/examples/tutorials of app architectures that *already scaled*. I've heard redux scales well, but I'm looking for someone that has already tried that and made the inevitable mistakes. And I need code, not assurances.\n2. Better documentation search strategy recommendations. The pages I'm finding are simultaneously repetitive yet inconsistent (with syntax, etc). Are there any \"single sources of truth\" out there that will be useful? Google searching is not cutting it for the first time in my life, and I'm lost :|\n\nThanks so much. I'm really blown away by the quality of posts in this subreddit so I'm hoping your guys' wisdom is what I'm missing :)\n\nEDIT:\n\nAnd the more I look at this, the more I realize that a lot of problems I'm anticipating boil down to one:\n\n3. What is a robust way to keep my client-side redux store in sync with my server side database? (given that I may be accessing that data from a lot of different routes/components)",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48k852",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "devvmh",
        "media": null,
        "score": 16,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 13,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": 1456911532.0,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48k852/help_designing_redux_state_for_a_single_page/",
        "locked": false,
        "name": "t3_48k852",
        "created": 1456917315.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48k852/help_designing_redux_state_for_a_single_page/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Help designing Redux state for a single page application?",
        "created_utc": 1456888515.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 16
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have something working with react-router and window.history, but it isn&amp;#39;t compatible with older browsers. I&amp;#39;m trying to figure out how to use History.js with react, but I I haven&amp;#39;t been able to find good documentation. Any tips would be greatly appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "I have something working with react-router and window.history, but it isn't compatible with older browsers. I'm trying to figure out how to use History.js with react, but I I haven't been able to find good documentation. Any tips would be greatly appreciated.",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48myin",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "sjtcaer",
        "media": null,
        "score": 0,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 1,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48myin/how_to_use_historyjs_with_react/",
        "locked": false,
        "name": "t3_48myin",
        "created": 1456966075.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48myin/how_to_use_historyjs_with_react/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "How to use History.js with React?",
        "created_utc": 1456937275.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 0
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "medium.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48iem5",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "rafa2000",
        "media": null,
        "score": 41,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/Lfa3pbkHr7PVBlnYIo2_52YYFQIe69IqqtM8hK6T6p8.jpg?s=22701b70b15b2ae97cdc756f050c5ba7",
              "width": 400,
              "height": 400
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/Lfa3pbkHr7PVBlnYIo2_52YYFQIe69IqqtM8hK6T6p8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=0bec98bf2fe4f7a873d0ba22233dcb1f",
              "width": 108,
              "height": 108
            }, {
              "url": "https://i.redditmedia.com/Lfa3pbkHr7PVBlnYIo2_52YYFQIe69IqqtM8hK6T6p8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=c84f6548d6bffc68b578d932906ac4d5",
              "width": 216,
              "height": 216
            }, {
              "url": "https://i.redditmedia.com/Lfa3pbkHr7PVBlnYIo2_52YYFQIe69IqqtM8hK6T6p8.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=1a4d25a8be85aafdbb437d2a9422298f",
              "width": 320,
              "height": 320
            }],
            "variants": {},
            "id": "TlT1fZqVR9VBO9uGcooETe7h6fbMyTbB8znmRUj-T-M"
          }]
        },
        "num_comments": 4,
        "thumbnail": "http://b.thumbs.redditmedia.com/BcgXPTdWYSvyna_ylH33WwoC4sVCLtOWm_sUq8taf3U.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48iem5/enzyme_javascript_testing_utilities_for_react/",
        "locked": false,
        "name": "t3_48iem5",
        "created": 1456892532.0,
        "url": "https://medium.com/airbnb-engineering/enzyme-javascript-testing-utilities-for-react-a417e5e5090f#.qao9lkb16",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Enzyme: JavaScript Testing utilities for React \u2014 Airbnb Engineering &amp; Data Science \u2014 Medium",
        "created_utc": 1456863732.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 41
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone, &lt;/p&gt;\n\n&lt;p&gt;I have finally finished my first react.js app and I would like to deploy it now. I am using react.js as the front-end and a node + express.js api backend. Right now I am using this persons boilerplate: &lt;a href=\"https://github.com/StephenGrider/ReduxSimpleStarter\"&gt;https://github.com/StephenGrider/ReduxSimpleStarter&lt;/a&gt; which is set for a development enviroment but apparently it looks like it is not good for a production enviroment. &lt;/p&gt;\n\n&lt;p&gt;What standard boilerplate package is there that is set for production?&lt;/p&gt;\n\n&lt;p&gt;How do I run the react.js app on digitalocean? Do I use nginx? or do I just run the app with pm2?&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "Hey everyone, \n\nI have finally finished my first react.js app and I would like to deploy it now. I am using react.js as the front-end and a node + express.js api backend. Right now I am using this persons boilerplate: https://github.com/StephenGrider/ReduxSimpleStarter which is set for a development enviroment but apparently it looks like it is not good for a production enviroment. \n\nWhat standard boilerplate package is there that is set for production?\n\nHow do I run the react.js app on digitalocean? Do I use nginx? or do I just run the app with pm2?\n\n\n\n\nThanks!",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48l4sc",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "mre12345",
        "media": null,
        "score": 4,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/AaN3I-er6foD2wjbbjMRt0B7qtRitJs08wl0ZMkgFl0.jpg?s=3293d80c39d90d75345873f846fb48d6",
              "width": 400,
              "height": 400
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/AaN3I-er6foD2wjbbjMRt0B7qtRitJs08wl0ZMkgFl0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=cfce7da7a8f096546bc0ccef531da8fc",
              "width": 108,
              "height": 108
            }, {
              "url": "https://i.redditmedia.com/AaN3I-er6foD2wjbbjMRt0B7qtRitJs08wl0ZMkgFl0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=7addca4d4c5f5fd318972d0a6af38f5e",
              "width": 216,
              "height": 216
            }, {
              "url": "https://i.redditmedia.com/AaN3I-er6foD2wjbbjMRt0B7qtRitJs08wl0ZMkgFl0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=1c3c75b6dc2508f80ed90efb08bc865f",
              "width": 320,
              "height": 320
            }],
            "variants": {},
            "id": "aZYVoIpZdlph6WRGPYtIE_OLmz67jsL-fG2Wpo-d0ZE"
          }]
        },
        "num_comments": 5,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "self",
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48l4sc/how_to_deploy_reactjs_app_onto_digital_ocean/",
        "locked": false,
        "name": "t3_48l4sc",
        "created": 1456932507.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48l4sc/how_to_deploy_reactjs_app_onto_digital_ocean/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "How to deploy React.js app onto digital ocean?",
        "created_utc": 1456903707.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 4
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "github.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48kqvr",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "beefancohen",
        "media": null,
        "score": 6,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/aMZka_Kbx4FL5U4d96ySgP-QrzbbzAQF0cuB3oUU3fk.jpg?s=92501fb3f1bfa3707ab727a8994273e2",
              "width": 247,
              "height": 247
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/aMZka_Kbx4FL5U4d96ySgP-QrzbbzAQF0cuB3oUU3fk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=4340815de14e27da4946a4020ffd7f5b",
              "width": 108,
              "height": 108
            }, {
              "url": "https://i.redditmedia.com/aMZka_Kbx4FL5U4d96ySgP-QrzbbzAQF0cuB3oUU3fk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=a8436607171eef68d99b6e2d2bddbbac",
              "width": 216,
              "height": 216
            }],
            "variants": {},
            "id": "IoVLmq__I4bttlkS-7xiQxVymm_uvVE0aRxYXcSJn5k"
          }]
        },
        "num_comments": 6,
        "thumbnail": "http://b.thumbs.redditmedia.com/OjzNx0V21cVIH7dPsERJxfw9ZboDQM--fYa2XniWE7A.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48kqvr/building_a_jsx_accessibility_eslint_plugin/",
        "locked": false,
        "name": "t3_48kqvr",
        "created": 1456925225.0,
        "url": "https://github.com/evcohen/eslint-plugin-jsx-a11y",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Building a JSX accessibility eslint plugin",
        "created_utc": 1456896425.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 6
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m confused about how to render on the server side with Express (or Koa in my case). Pls help&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "I'm confused about how to render on the server side with Express (or Koa in my case). Pls help",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48l3hw",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "mxzt99",
        "media": null,
        "score": 3,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 2,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48l3hw/reactrouter_server_rendering/",
        "locked": false,
        "name": "t3_48l3hw",
        "created": 1456931755.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48l3hw/reactrouter_server_rendering/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "React-Router Server Rendering",
        "created_utc": 1456902955.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 3
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "courses.reactjsprogram.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48hz1q",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "blackswanned",
        "media": null,
        "score": 16,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/IwTeDlCcBJ3Itxbb5esYCY1tQT-XUczs9thHKYlBWWk.jpg?s=e869dbd28d4f960d6b50a93442965832",
              "width": 960,
              "height": 540
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/IwTeDlCcBJ3Itxbb5esYCY1tQT-XUczs9thHKYlBWWk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=d3c1217900b09dd7bd16a4eae73ecd37",
              "width": 108,
              "height": 60
            }, {
              "url": "https://i.redditmedia.com/IwTeDlCcBJ3Itxbb5esYCY1tQT-XUczs9thHKYlBWWk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=e88bda017725149afcbf25ba09381d66",
              "width": 216,
              "height": 121
            }, {
              "url": "https://i.redditmedia.com/IwTeDlCcBJ3Itxbb5esYCY1tQT-XUczs9thHKYlBWWk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=8ac2c930b5e26ca9b2dc82114826e4ae",
              "width": 320,
              "height": 180
            }, {
              "url": "https://i.redditmedia.com/IwTeDlCcBJ3Itxbb5esYCY1tQT-XUczs9thHKYlBWWk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=115bc0bc0bee3af66f633a98da5b22c6",
              "width": 640,
              "height": 360
            }, {
              "url": "https://i.redditmedia.com/IwTeDlCcBJ3Itxbb5esYCY1tQT-XUczs9thHKYlBWWk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=ae529e1b1bd2a5813e5203714c85fc7b",
              "width": 960,
              "height": 540
            }],
            "variants": {},
            "id": "f6W4LF-ujOHgbN36UN1uYjGBUtmgvVkkacya61BkJMg"
          }]
        },
        "num_comments": 2,
        "thumbnail": "http://b.thumbs.redditmedia.com/Hbol_ko2SkvQeuyYauHTwINLk15IUNi34AB2I8Hl-yU.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48hz1q/free_reactjs_fundamentals_course/",
        "locked": false,
        "name": "t3_48hz1q",
        "created": 1456887105.0,
        "url": "http://courses.reactjsprogram.com/courses/reactjsfundamentals",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Free React.js Fundamentals Course",
        "created_utc": 1456858305.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 16
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "blog.tarkalabs.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48jumd",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "vagmi",
        "media": null,
        "score": 2,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/F6AGihc6sjMmnVLm-XWIe0jcP2vPZpBwjOqH2PhZX-c.jpg?s=56a677929f9af56fa137ae07c36cfd15",
              "width": 200,
              "height": 200
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/F6AGihc6sjMmnVLm-XWIe0jcP2vPZpBwjOqH2PhZX-c.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=482dd3c6232f59884e434a498faa2cbd",
              "width": 108,
              "height": 108
            }],
            "variants": {},
            "id": "sAYY86zgdT-GUuuQxQ55XhcVr4wy0uMIajd_UOBdg3Y"
          }]
        },
        "num_comments": 1,
        "thumbnail": "http://b.thumbs.redditmedia.com/6E0YXUncXhFZE-HgC8IH7COjePvS20nr4P30WrcpyiU.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48jumd/xpost_rswift_integrating_react_native_with_an/",
        "locked": false,
        "name": "t3_48jumd",
        "created": 1456912021.0,
        "url": "http://blog.tarkalabs.com/2016/03/02/integrating-react-native-into-an-existing-swift-project/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "[xpost /r/swift] - Integrating React Native with an existing Swift Project",
        "created_utc": 1456883221.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 2
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Did a bit of a googling but couldn&amp;#39;t find anything. Seems like a no-brainer for a web standards-body to look at but I guess they are waiting for the JS ecosystem around Virtual Dom to settle on a &amp;quot;best in class&amp;quot; approach.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "Did a bit of a googling but couldn't find anything. Seems like a no-brainer for a web standards-body to look at but I guess they are waiting for the JS ecosystem around Virtual Dom to settle on a \"best in class\" approach.",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48gb4q",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "bittered",
        "media": null,
        "score": 13,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 15,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48gb4q/are_browser_vendors_planning_to_introduce_a/",
        "locked": false,
        "name": "t3_48gb4q",
        "created": 1456866569.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48gb4q/are_browser_vendors_planning_to_introduce_a/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Are browser vendors planning to introduce a higher level and more performant DOM abstraction (ala Virtual DOM)?",
        "created_utc": 1456837769.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 13
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I understand Flux, but I never really understood why Flux needs multiple stores and a dispatcher, so I used single stores with mutable state.&lt;/p&gt;\n\n&lt;p&gt;It seems like the only differences between what I used and Redux is that Redux enforces immutable state, and reducers are a byproduct of this. I don&amp;#39;t understand why Redux is the hot new thing if it&amp;#39;s just single store + immutable state. Am I misunderstanding Redux? What else does Redux have?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "I understand Flux, but I never really understood why Flux needs multiple stores and a dispatcher, so I used single stores with mutable state.\n\nIt seems like the only differences between what I used and Redux is that Redux enforces immutable state, and reducers are a byproduct of this. I don't understand why Redux is the hot new thing if it's just single store + immutable state. Am I misunderstanding Redux? What else does Redux have?",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48jquj",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "linksku",
        "media": null,
        "score": 1,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "num_comments": 4,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48jquj/is_redux_just_flux_with_a_single_store_and/",
        "locked": false,
        "name": "t3_48jquj",
        "created": 1456910486.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48jquj/is_redux_just_flux_with_a_single_store_and/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Is Redux just Flux with a single store and immutable state?",
        "created_utc": 1456881686.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 1
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "stackoverflow.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48hu9o",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "rokemaster",
        "media": null,
        "score": 2,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?s=5771b03e94f56162bcafaf1079f2a1e7",
              "width": 316,
              "height": 316
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=9189a7b196263db4825e3ab0c948e796",
              "width": 108,
              "height": 108
            }, {
              "url": "https://i.redditmedia.com/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=c442ba677155996a0a49f51a400124b1",
              "width": 216,
              "height": 216
            }],
            "variants": {},
            "id": "nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0"
          }]
        },
        "num_comments": 3,
        "thumbnail": "http://b.thumbs.redditmedia.com/FWPJhmNlvwYngarjpdVpgKW5TsK2-ck9fRmOhlYq3pM.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48hu9o/has_some_especial_meaning_on_react_components/",
        "locked": false,
        "name": "t3_48hu9o",
        "created": 1456885620.0,
        "url": "http://stackoverflow.com/q/35730551/816721",
        "author_flair_text": null,
        "quarantine": false,
        "title": "{' '} has some especial meaning on React components",
        "created_utc": 1456856820.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 2
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "self.reactjs",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;When I click on one of my route links, it swaps to the url, but the view stays the same, unless I manually refresh. However, if I manually type in the url it works fine.&lt;/p&gt;\n\n&lt;p&gt;What I want is when I click any of the links it goes to the correct view.&lt;/p&gt;\n\n&lt;p&gt;Here is the code with my routing path, main app container, and my navbar which contains the links.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://gist.github.com/laere/d1411242e547932b0d35\"&gt;https://gist.github.com/laere/d1411242e547932b0d35&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If you need any more details please let me know.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Recreated the issue which can be found here &lt;a href=\"https://github.com/laere/routertest\"&gt;https://github.com/laere/routertest&lt;/a&gt; &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
        "selftext": "When I click on one of my route links, it swaps to the url, but the view stays the same, unless I manually refresh. However, if I manually type in the url it works fine.\n\nWhat I want is when I click any of the links it goes to the correct view.\n\nHere is the code with my routing path, main app container, and my navbar which contains the links.\n\nhttps://gist.github.com/laere/d1411242e547932b0d35\n\nIf you need any more details please let me know.\n\n**UPDATE**\n\nRecreated the issue which can be found here https://github.com/laere/routertest ",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48jdjf",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "laere",
        "media": null,
        "score": 1,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/FyQ1YIxe_JmYSzqocTB5BUMOniOhcssb1bhP-UmKtqk.jpg?s=8c5bbfc4aed4e2971aae9c9cc7cfe4cb",
              "width": 336,
              "height": 336
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/FyQ1YIxe_JmYSzqocTB5BUMOniOhcssb1bhP-UmKtqk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=45d5e3a829c7a6552f957bb8dfbb33f9",
              "width": 108,
              "height": 108
            }, {
              "url": "https://i.redditmedia.com/FyQ1YIxe_JmYSzqocTB5BUMOniOhcssb1bhP-UmKtqk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=740183426bd64744e1e89202c7f8d9b2",
              "width": 216,
              "height": 216
            }, {
              "url": "https://i.redditmedia.com/FyQ1YIxe_JmYSzqocTB5BUMOniOhcssb1bhP-UmKtqk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=bef5f621feef22b85c0907b05d0a2821",
              "width": 320,
              "height": 320
            }],
            "variants": {},
            "id": "M7erhenQYVGp91L4JuNWgzeb3J2BwIu53GAwVehMSxM"
          }]
        },
        "num_comments": 5,
        "thumbnail": "self",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": 1456961159.0,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "self",
        "stickied": false,
        "from": null,
        "is_self": true,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48jdjf/help_with_react_router_issue/",
        "locked": false,
        "name": "t3_48jdjf",
        "created": 1456905169.0,
        "url": "https://www.reddit.com/r/reactjs/comments/48jdjf/help_with_react_router_issue/",
        "author_flair_text": null,
        "quarantine": false,
        "title": "Help with React Router issue",
        "created_utc": 1456876369.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 1
      }
    }, {
      "kind": "t3",
      "data": {
        "domain": "github.com",
        "banned_by": null,
        "media_embed": {},
        "subreddit": "reactjs",
        "selftext_html": null,
        "selftext": "",
        "likes": null,
        "suggested_sort": null,
        "user_reports": [],
        "secure_media": null,
        "link_flair_text": null,
        "id": "48gox8",
        "from_kind": null,
        "gilded": 0,
        "archived": false,
        "clicked": false,
        "report_reasons": null,
        "author": "oyanglulu",
        "media": null,
        "score": 5,
        "approved_by": null,
        "over_18": false,
        "hidden": false,
        "preview": {
          "images": [{
            "source": {
              "url": "https://i.redditmedia.com/ow25HJfu_wCegN5ua0b8X7PC-GNHjeZvnMfOkZH-HiI.jpg?s=8d0365cb2bde2dfe65a15b459497b2fb",
              "width": 400,
              "height": 400
            },
            "resolutions": [{
              "url": "https://i.redditmedia.com/ow25HJfu_wCegN5ua0b8X7PC-GNHjeZvnMfOkZH-HiI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=fbe3b1116ed4456664dd534e3e4b64e4",
              "width": 108,
              "height": 108
            }, {
              "url": "https://i.redditmedia.com/ow25HJfu_wCegN5ua0b8X7PC-GNHjeZvnMfOkZH-HiI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=d0a73129dc5851ae1d74220f6912158f",
              "width": 216,
              "height": 216
            }, {
              "url": "https://i.redditmedia.com/ow25HJfu_wCegN5ua0b8X7PC-GNHjeZvnMfOkZH-HiI.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=f9dc68a846936b6f85cebe0a5d00f614",
              "width": 320,
              "height": 320
            }],
            "variants": {},
            "id": "talcXXcRZ3rdGIJvOGZ2ijzp5dkwq_W1bXc00xRLuuk"
          }]
        },
        "num_comments": 3,
        "thumbnail": "http://a.thumbs.redditmedia.com/nwRfO-f7wXVpmvvOk-0rtYeeNyxqw3YMxb7VsARWjq0.jpg",
        "subreddit_id": "t5_2zldd",
        "hide_score": false,
        "edited": false,
        "link_flair_css_class": null,
        "author_flair_css_class": null,
        "downs": 0,
        "secure_media_embed": {},
        "saved": false,
        "removal_reason": null,
        "post_hint": "link",
        "stickied": false,
        "from": null,
        "is_self": false,
        "from_id": null,
        "permalink": "/r/reactjs/comments/48gox8/reactmost_monadic_reactive_state_container/",
        "locked": false,
        "name": "t3_48gox8",
        "created": 1456871428.0,
        "url": "https://github.com/jcouyang/react-most",
        "author_flair_text": null,
        "quarantine": false,
        "title": "React-most: Monadic Reactive State Container",
        "created_utc": 1456842628.0,
        "distinguished": null,
        "mod_reports": [],
        "visited": false,
        "num_reports": null,
        "ups": 5
      }
    }],
    "after": "t3_48gox8",
    "before": null
  }
}
